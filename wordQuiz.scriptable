{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "deep-blue",
    "glyph" : "book-reader"
  },
  "name" : "wordQuiz",
  "script" : "const CONFIG_URL = \"https:\/\/raw.githubusercontent.com\/pchuri\/scriptable-words-test\/main\/config.json\"\nawait main()\n\nasync function getConfig() {\n  let req = new Request(CONFIG_URL)\n  return await req.loadJSON()\n}\n\nasync function getWords(url) {\n  let req = new Request(url)\n  return await req.loadString()\n}\n\nasync function main() {\n  let config = await getConfig()\n  let raws = await getWords(config.wordsUrl)\n  let words = prepareWords(raws)\n  presentTable(config.title, words)\n}\n\nfunction prepareWords(raws) {\n  wordsArray = raws.split(\"\\n\")\n  let words=[]\n  for (let i in wordsArray) {\n    let w=wordsArray[i].trim()\n    if (w) {\n      words.push(w.replaceAll('\"',''))\n    }\n  }\n  return words\n}\n\nfunction presentTable(title, words) {\n  uiTable = new UITable()\n  uiTable.showSeparators = true\n  \n  uiTitleRow = new UITableRow()\n  uiTitleRow.height = 70;\n  \n  let uiTitle = uiTitleRow.addText(title)\n  uiTitle.titleFont = Font.largeTitle()\n  uiTable.addRow(uiTitleRow)\n\n  for (let i in words) {\n    let w = words[i].split(\"|\")\n    let index = 1+parseInt(i);\n\n    uiTableRow = new UITableRow()\n    uiTableRow.height = 65;\n    uiTableRow.onSelect = () => {\n      Speech.speak(w[0])\n    }\n    uiTableRow.dismissOnSelect = false\n\n\t let row = index + \". \" + w[0]\n    uiText = uiTableRow.addText(row, w[1])\n\n    uiTable.addRow(uiTableRow)\n  }\n\n  uiTable.present()\n}\n",
  "share_sheet_inputs" : [

  ]
}